# coding: utf-8

"""
    Search API

    Use the Search REST API  to manage your data (indices and records), implement search, and improve relevance (with Rules, synonyms, and language dictionaries).  Although Algolia provides a REST API, you should use the official open source API [clients, libraries, and tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg


class Acl(str, Enum):
    """
    API key permissions:  `addObject`: required to add or update records, copy or move an index. `analytics`: required to access the Analytics API. `browse`: required to view records `deleteIndex`: required to delete indices. `deleteObject`: required to delete records. `editSettings`: required to change index settings. `inference`: required to access the Inference API. `listIndexes`: required to list indices. `logs`: required to access logs of search and indexing operations. `recommendation`: required to access the Personalization and Recommend APIs. `search`: required to search records `seeUnretrievableAttributes`: required to retrieve [`unretrievableAttributes`](https://www.algolia.com/doc/api-reference/api-parameters/unretrievableAttributes/) for all operations that return records. `settings`: required to examine index settings.
    """

    """
    allowed enum values
    """
    ADDOBJECT = "addObject"
    ANALYTICS = "analytics"
    BROWSE = "browse"
    DELETEOBJECT = "deleteObject"
    DELETEINDEX = "deleteIndex"
    EDITSETTINGS = "editSettings"
    INFERENCE = "inference"
    LISTINDEXES = "listIndexes"
    LOGS = "logs"
    PERSONALIZATION = "personalization"
    RECOMMENDATION = "recommendation"
    SEARCH = "search"
    SEEUNRETRIEVABLEATTRIBUTES = "seeUnretrievableAttributes"
    SETTINGS = "settings"
    USAGE = "usage"

    @classmethod
    def from_json(cls, json_str: str) -> Acl:
        """Create an instance of Acl from a JSON string"""
        return Acl(json.loads(json_str))
